from typing import Any, List, Optional

from pydantic import BaseModel, ConfigDict, Field

from py_vex._iri import Iri


class Vulnerability(BaseModel):
    id: Optional[Iri] = Field(alias="@id", default=None)
    name: str
    description: Optional[str] = None
    aliases: Optional[List[str]] = None

    model_config = ConfigDict(populate_by_name=True)

    def to_json(self, **kwargs: Any) -> str:
        """Return a JSON string representation of the model."""
        return self.model_dump_json(**kwargs)

    @classmethod
    def from_json(cls, json_string: str) -> "Vulnerability":
        """Create a model instance from a JSON string."""
        return cls.model_validate_json(json_string)
